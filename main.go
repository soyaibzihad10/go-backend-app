package main

import (
	"log"
	"net/http"

	"github.com/gorilla/mux"
)

type homeHandler struct {
}

func (hh homeHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	w.Write([]byte("Welcome!"))
}

func aboutHandler(w http.ResponseWriter, r *http.Request) {
	w.Write([]byte("This is the about page."))
}

func main() {
	r := mux.NewRouter()

	r.HandleFunc("/", homeHandler)

	/*
		/books/all ‡¶è‡¶¨‡¶Ç /books/{isbn} ‡¶è‡¶á ‡¶¶‡ßÅ‡¶á‡¶ü‡¶ø route ‡¶è‡¶ï‡ßá ‡¶Ö‡¶™‡¶∞‡ßá‡¶∞ ‡¶∏‡¶ô‡ßç‡¶ó‡ßá conflict ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá path matching ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßü‡•§
		‡¶è‡¶ñ‡¶®, ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶Ø‡¶¶‡¶ø ‡¶¨‡ßç‡¶∞‡¶æ‡¶â‡¶ú‡¶æ‡¶∞‡ßá /books/all ‡¶π‡¶ø‡¶ü ‡¶ï‡¶∞‡ßá...

		üëâ ‡¶∞‡¶æ‡¶â‡¶ü‡¶æ‡¶∞ ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ú‡¶æ‡¶®‡¶¨‡ßá ‡¶Ø‡ßá ‡¶è‡¶ü‡¶æ all ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡¶ø‡¶ï‡ßç‡¶∏‡¶° ‡¶∞‡¶æ‡¶â‡¶ü, ‡¶®‡¶æ‡¶ï‡¶ø ‡¶è‡¶ü‡¶ø {isbn} ‡¶®‡¶æ‡¶Æ‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ?
		
		Soulution: Go-‡¶è‡¶∞ gorilla/mux ‡¶∞‡¶æ‡¶â‡¶ü‡¶æ‡¶∞ ‡¶â‡¶™‡¶∞‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá:
		It matches in order from top to bottom.
	*/

	booksSSubR := r.PathPrefix("/books").Subrouter()
	booksSubR.HandleFunc("/all", AllHandler).Methods(http.MethodGet)
    booksSubR.HandleFunc("/{isbn}", IspnHandler).Methods(http.MethodGet)
    booksSubR.HandleFunc("/new", NewHandler).Methods(http.MethodPost)
    booksSubR.HandleFunc("/update", UpdateHandler).Methods(http.MethodPut)
    booksSubR.HandleFunc("/delete/{isbn}", DeleteIspnHandler).Methods(http.MethodDelete)

    log.Fatal(http.ListenAndServe(":8090", r))
}
